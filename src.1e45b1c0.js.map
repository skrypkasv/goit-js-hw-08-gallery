{"version":3,"sources":["index.js"],"names":[],"mappings":";;;AAAA,aAAA,QAAA","file":"src.1e45b1c0.js","sourceRoot":"..\\src","sourcesContent":["import './sass/main.scss';\r\n\r\n// import data from './js/gallery-items.js';\r\n\r\n// // ▶ Создание и рендер разметки по массиву данных и\r\n// // предоставленному шаблону.\r\n// const gallery = document.querySelector('ul.js-gallery');\r\n// const markup = createGalleryMarkup(data);\r\n// gallery.insertAdjacentHTML('beforeend', markup);\r\n\r\n// function createGalleryMarkup(listItems) {\r\n//   return listItems.map(({ preview, original, description }) => {\r\n//     return `<li class=\"gallery__item\">\r\n//               <a\r\n//                 class=\"gallery__link\"\r\n//                 href=\"${original}\"\r\n//               >\r\n//                 <img\r\n//                   class=\"gallery__image\"\r\n//                   src=\"${preview}\"\r\n//                   data-source=\"${original}\"\r\n//                   alt=\"${description}\"\r\n//                 />\r\n//               </a>\r\n//           </li>`\r\n//   }).join('');\r\n// }\r\n\r\n// // ▶ Реализация делегирования на галерее ul.js-gallery\r\n// // и получение url большого изображения.\r\n// // ▶ Открытие модального окна по клику на элементе\r\n// // галереи.\r\n// // ▶ Подмена значения атрибута src элемента\r\n// // img.lightbox__image.\r\n// gallery.addEventListener('click', openModal)\r\n// const modal = document.querySelector('div.js-lightbox')\r\n// const modalImg = document.querySelector('img.lightbox__image')\r\n\r\n// function openModal(evt) {\r\n//   evt.preventDefault()\r\n//   if (!evt.target.classList.contains('gallery__image')) {\r\n//     return\r\n//   }\r\n//   modal.classList.add('is-open');\r\n//   changeModalImgAttributes(evt);\r\n\r\n//   window.addEventListener('keydown', onEscKeydown)\r\n//   window.addEventListener('keydown', onArrowsKeydown)\r\n// }\r\n// function changeModalImgAttributes(evt) {\r\n//   modalImg.src = evt.target.dataset.source;\r\n//   modalImg.alt = evt.target.alt;\r\n// }\r\n\r\n// // ▶ Закрытие модального окна по клику на кнопку\r\n// // button[data - action= \"close-lightbox\"].\r\n// // ▶ Очистка значения атрибута src элемента\r\n// // img.lightbox__image.Это необходимо для того,\r\n// // чтобы при следующем открытии модального окна,\r\n// // пока грузится изображение, мы не видели предыдущее.\r\n// const btnCloseModal = document.querySelector('button[data-action=\"close-lightbox\"]');\r\n// btnCloseModal.addEventListener('click', closeModal);\r\n\r\n// function closeModal() {\r\n//   window.removeEventListener('keydown', onEscKeydown)\r\n//   window.removeEventListener('keydown', onArrowsKeydown)\r\n//   modal.classList.remove('is-open');\r\n//   modalImg.src = '';\r\n// }\r\n\r\n// // Дополнительно\r\n// // Следующий функционал не обязателен при сдаче\r\n// // задания, но будет хорошей практикой по работе с\r\n// // событиями:\r\n\r\n// // ▶ Закрытие модального окна по клику на\r\n// // div.lightbox__overlay.\r\n// const modalBackdrop = document.querySelector('div.lightbox__overlay');\r\n// modalBackdrop.addEventListener('click', closeModal);\r\n\r\n// // ▶ Закрытие модального окна по нажатию клавиши ESC.\r\n// function onEscKeydown(evt) {\r\n//   if (evt.code === 'Escape') {\r\n//     closeModal()\r\n//   }\r\n// }\r\n// // ▶ Пролистывание изображений галереи в открытом\r\n// // модальном окне клавишами \"влево\" и \"вправо\".\r\n// const originLinks = data.map(({ original }) => original);\r\n\r\n// function onArrowsKeydown(evt) {\r\n//   if (evt.code === \"ArrowRight\") {\r\n//     onArrowRightKeydown()\r\n//   } else if (evt.code === \"ArrowLeft\") {\r\n//     onArrowLeftKeydown()\r\n//   }\r\n// }\r\n// function onArrowRightKeydown() {\r\n//   for (let i = 0; i < originLinks.length; i += 1) {\r\n//       if (modalImg.src === originLinks[8]) {\r\n//         modalImg.src = `${originLinks[0]}`;\r\n//         return;\r\n//       } else if (modalImg.src === originLinks[i]) {\r\n//         modalImg.src = `${originLinks[i + 1]}`;\r\n//         return;\r\n//       }\r\n//     }\r\n// }\r\n// function onArrowLeftKeydown() {\r\n//   for (let i = 0; i < originLinks.length; i += 1) {\r\n//       if (modalImg.src === originLinks[0]) {\r\n//         modalImg.src = `${originLinks[8]}`;\r\n//         return;\r\n//       } else if (modalImg.src === originLinks[i]) {\r\n//         modalImg.src = `${originLinks[i - 1]}`;\r\n//         return;\r\n//       }\r\n//     }\r\n// }\r\n\r\n\r\n/*Ссылка на оригинальное изображение должна храниться\r\nв data-атрибуте source на элементе img, и\r\nуказываться в href ссылки(это необходимо для\r\nдоступности): ⬇⬇⬇\r\n<li class=\"gallery__item\">\r\n  <a\r\n    class=\"gallery__link\"\r\n    href=\"https://cdn.pixabay.com/photo/2010/12/13/10/13/tulips-2546_1280.jpg\"\r\n  >\r\n    <img\r\n      class=\"gallery__image\"\r\n      src=\"https://cdn.pixabay.com/photo/2010/12/13/10/13/tulips-2546__340.jpg\"\r\n      data-source=\"https://cdn.pixabay.com/photo/2010/12/13/10/13/tulips-2546_1280.jpg\"\r\n      alt=\"Tulips\"\r\n    />\r\n  </a>\r\n</li> */\r\n"]}